#!$HOME/.local/bin/python3

'''this code provides the parts to build a netsh.cmd file to modify windows firewall rules
   by way of selection criteria to extract matching rule names from a dictionary.
   currently, one runs this in parts in a python interactive shell.
   by specification, modifications set remote ips to the ut-network.
   preparation: on the windows machine whose firewall rules we'll modify, run:
   netsh advfirewall firewall show rule all > c:\fwrules.txt
   the file generated is used to create the fwRuleDict
   fwrules.txt cannot have any leading blank lines.
'''

##### STEP 1 #####
import os

fwRulesFile = os.environ['HOME'] + '/repo/intro_to_programming/writing_a_script_with_a_script_fw/fwrules.txt'
# the file generated by:
# netsh advfirewall firewall show rule all

##### the next two assignment statements hold the start and end of the netsh command to modify firewall rules
netshLineStart = 'netsh advfirewall firewall set rule name='
netshLineEnd = ' new remoteip=10.0.0.0/255.0.0.0,172.16.0.0/255.240.0.0,192.168.0.0/255.255.0.0'
# ^^^ private networks

##### STEP 2 #####
# build the fwRuleDictionary
with open(fwRulesFile, 'r') as inFile:
    LoS = inFile.read().splitlines()
    fwRuleDict = dict()
    for line in LoS:
        if 'Rule Name' in line:
            ruleName = line.split(':')[-1].strip()
            attrDict = dict()
        if line:
            if 'Rule Name' not in line and '---------' not in line:
                if ':' in line:
                    attr, colon, value = line.partition(':') #this method is similar to .split(),
                    # except it splits only along the first piece of punctuation in the line.
                    # we use it because some values contain colons, meaning we can't .split()
                    # those lines into key, value pairs
                    attr, value = attr.strip(), value.strip()
                else:
                    continue
                attrDict[attr] = value
        if not line: # empty string/empty line
           fwRuleDict[ruleName] = attrDict
# build the fwRuleDictionary


##### STEP 3 #####
# sample queries that generate a windows scripts which, when run, modify the rules that match.
# in this example, we restrict access to all fw rules whose direction is 'In' (inbound) to ut-network
with open('netsh.cmd', 'w') as outFile:
    for key, value in fwRuleDict.items():
        if value['Direction'] == 'In':
            outFile.write(netshLineStart + '"' + key + '"' + netshLineEnd + "\n")
            
# in this example, we restrict access to all fw rules with 'RPC' in the key (Rule Name)
with open('netsh.cmd', 'w') as outFile:
    for key, value in fwRuleDict.items():
        if 'RPC' in key:
            outFile.write(netshLineStart + '"' + key + '"' + netshLineEnd + "\n")
